import Head from "next/head";
import Image from "next/image";
import gql from "graphql-tag";
import { useQuery, useMutation } from "@apollo/react-hooks";
import { useForm } from "react-hook-form";

const GET_SPOTS_QUERY = gql`
  query {
    allSpots {
      data {
        contact
        details
        created_at
      }
    }
  }
`;

const CREATE_SPOT_MUTATION = gql`
  mutation CreateSpot(
    $contact: String!
    $details: String!
    $created_at: String!
  ) {
    createSpot(
      data: { contact: $contact, details: $details, created_at: $created_at }
    ) {
      contact
      details
      created_at
    }
  }
`;

export default function Home() {
  const { data, loading } = useQuery(GET_SPOTS_QUERY);
  const [createSpot] = useMutation(CREATE_SPOT_MUTATION);
  const {
    register,
    handleSubmit,
    reset,
    formState: { errors },
  } = useForm();

  if (loading) {
    return <div>Loading...</div>;
  }

  console.log({ data });

  const onSubmit = async (data: any) => {
    const created_at = new Date();
    const dataToSubmit = { ...data, created_at };
    const spot = await createSpot({ variables: dataToSubmit });
    console.log(spot);

    reset();

    return false;
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <form onSubmit={handleSubmit(onSubmit)}>
          <div>
            <label>Contact</label>
            <input {...register("contact", { required: true })} />
            {errors.contact && <span>This field is required</span>}
          </div>

          <div>
            <label>Details</label>
            <input {...register("details", { required: true })} />
            {errors.details && <span>This field is required</span>}
          </div>

          <input type="submit" value="Submit" />
        </form>
      </main>
    </div>
  );
}
